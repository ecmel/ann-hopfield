/*
 * HelpForm.java
 *
 * Created on April 11, 2006, 6:28 AM
 */

package hopfield;

/**
 *
 * @author  Ecmel Ercan
 */
public class HelpForm extends javax.swing.JFrame {
    
    public HelpForm(javax.swing.JFrame parent) {
        initComponents();
        setLocationRelativeTo(parent);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        closeButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Help");
        jTextPane1.setEditable(false);
        jTextPane1.setText("Train MLP network to learn the selected patterns. In addition to predefined patterns, you may define also your own patterns.The network has 80 neurons since the pattern defined on 8x10 grid are to be trained to the network. The number of neurons at the output layer depends on the number of patterns that you have selected to be trained. In the network there are two hidden layers and you can adjust the number of neurons at each layer. Furthermore you can adjust the number of iterations and learning rate. You may observe the value of the error as training progresses.\n\nAfter you have trained the network, load the patterns that you want on the grid, you may distort them by adding noise or by directly changing the elements on the grid by clicking them. Then ask the network to recognize the pattern. The charts at the bottom right of the applett are shows the value of each neuron output. In the ideal case the output of the neuron corresponding to the pattern will be 100% and all the others will be 0%. \n\nObserve what happens as the amount of noiseis increased, and also as the number of iterations are increased.\n\n\nHere are some useful tips:\n\nSelect the patterns to be trained by clicking on the thickbox under them. \nClick on the \"Train Selected Pattern(s)\" button to train the network. You can adjust the learning rate, training iteration number and the number of neurons in the hidden layer. \nLoad one of the patterns by clicking on it. \nAdd random noise to the pattern by using \"Add Noise\" button. (You can adjust the level of noise) \nYou can edit the loaded pattern. \nClick on \"Recall\" button to see how the Backpropagation algorithm gives the results. The charts at the bottom right of the applett are shows the value of each neuron output. In the ideal case the output of the neuron corresponding to the pattern will be 100% and all the others will be 0%. \nYou can clear the grids by clicking on \"Clear Pattern\" buttons \nYou can create your own pattern on the loaded pattern section, then you can simply save it by clicking the thickbox belonging to pattern that you want to save it to, and then clicking \"Save\" button. \n  ");
        jScrollPane1.setViewportView(jTextPane1);

        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(closeButton, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 527, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 356, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(closeButton)
                .addContainerGap())
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        dispose();
    }//GEN-LAST:event_closeButtonActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane jTextPane1;
    // End of variables declaration//GEN-END:variables
    
}
